"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{5634:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"docs/developer-resources/testing","title":"Testing","description":"To ensure quality and stability, all plugins must include appropriate unit and integration tests. Testing helps verify that plugin logic works correctly across the server, admin, and mobile components.","source":"@site/docs/docs/developer-resources/testing.md","sourceDirName":"docs/developer-resources","slug":"/developer-resources/testing","permalink":"/docs/developer-resources/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-plugin/edit/develop/docs/docs/docs/developer-resources/testing.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"testing","title":"Testing","slug":"/developer-resources/testing","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Containerizing Plugins","permalink":"/docs/developer-resources/container-plugins"},"next":{"title":"Plugin Scripts","permalink":"/docs/developer-resources/scripts"}}');var i=t(4848),r=t(8453);const l={id:"testing",title:"Testing",slug:"/developer-resources/testing",sidebar_position:4},o="Testing Plugins",a={},d=[{value:"Folder Structure for Tests",id:"folder-structure-for-tests",level:2},{value:"1. Server (API) Tests",id:"1-server-api-tests",level:2},{value:"Example (Vitest + TypeORM)",id:"example-vitest--typeorm",level:3},{value:"2. Admin Panel Tests",id:"2-admin-panel-tests",level:2},{value:"Example",id:"example",level:3},{value:"3. Mobile App Tests",id:"3-mobile-app-tests",level:2},{value:"Example",id:"example-1",level:3},{value:"Writing Good Tests",id:"writing-good-tests",level:2},{value:"Running Tests",id:"running-tests",level:2},{value:"Server / Admin",id:"server--admin",level:3},{value:"Mobile (Flutter)",id:"mobile-flutter",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"testing-plugins",children:"Testing Plugins"})}),"\n",(0,i.jsx)(n.p,{children:"To ensure quality and stability, all plugins must include appropriate unit and integration tests. Testing helps verify that plugin logic works correctly across the server, admin, and mobile components."}),"\n",(0,i.jsx)(n.h2,{id:"folder-structure-for-tests",children:"Folder Structure for Tests"}),"\n",(0,i.jsx)(n.p,{children:"Each plugin should include tests in subfolders as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"plugins/\n\u2514\u2500\u2500 my-plugin/\n    \u251c\u2500\u2500 server/\n    \u2502   \u2514\u2500\u2500 __tests__/\n    \u2502       \u2514\u2500\u2500 plugin-service.test.ts\n    \u251c\u2500\u2500 admin/\n    \u2502   \u2514\u2500\u2500 __tests__/\n    \u2502       \u2514\u2500\u2500 PluginComponent.test.tsx\n    \u2514\u2500\u2500 mobile/\n        \u2514\u2500\u2500 test/\n            \u2514\u2500\u2500 plugin_test.dart\n"})}),"\n",(0,i.jsx)(n.h2,{id:"1-server-api-tests",children:"1. Server (API) Tests"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.a,{href:"https://vitest.dev",children:"Vitest"})," for testing GraphQL resolvers and service logic."]}),"\n",(0,i.jsx)(n.li,{children:"Mock external dependencies and DB calls."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-vitest--typeorm",children:"Example (Vitest + TypeORM)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { describe, it, expect } from 'vitest';\nimport { getGreeting } from '../plugin-service';\n\ndescribe('plugin-service', () => {\n  it('should return the correct greeting', () => {\n    const result = getGreeting('Talawa');\n    expect(result).toBe('Hello, Talawa!');\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"2-admin-panel-tests",children:"2. Admin Panel Tests"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.a,{href:"https://vitest.dev",children:"Vitest"})," along with ",(0,i.jsx)(n.a,{href:"https://testing-library.com/docs/react-testing-library/intro/",children:"@testing-library/react"})," for testing UI components."]}),"\n",(0,i.jsx)(n.li,{children:"Validate rendering, interactions, and conditional UI."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { describe, it, expect } from 'vitest';\nimport { render, screen } from '@testing-library/react';\nimport PluginCard from '../PluginCard';\n\ndescribe('PluginCard', () => {\n  it('renders plugin name', () => {\n    render(<PluginCard name=\"Survey Plugin\" />);\n    expect(screen.getByText(/Survey Plugin/)).toBeInTheDocument();\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"3-mobile-app-tests",children:"3. Mobile App Tests"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.a,{href:"https://docs.flutter.dev/testing",children:"Flutter\u2019s built-in test framework"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Focus on widget tests and logic inside the plugin folder."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"import 'package:flutter_test/flutter_test.dart';\nimport 'package:my_plugin/my_plugin.dart';\n\nvoid main() {\n  test('greeting message is correct', () {\n    final greeting = getGreeting('Talawa');\n    expect(greeting, 'Hello, Talawa!');\n  });\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"writing-good-tests",children:"Writing Good Tests"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cover both success and failure scenarios"}),"\n",(0,i.jsx)(n.li,{children:"Use mocks for external services"}),"\n",(0,i.jsx)(n.li,{children:"Keep test files close to the code they test"}),"\n",(0,i.jsx)(n.li,{children:"Run tests using CI before merging changes"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"running-tests",children:"Running Tests"}),"\n",(0,i.jsx)(n.h3,{id:"server--admin",children:"Server / Admin"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm test\n"})}),"\n",(0,i.jsx)(n.h3,{id:"mobile-flutter",children:"Mobile (Flutter)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"flutter test\n"})}),"\n",(0,i.jsx)(n.p,{children:"Consistent testing ensures Talawa Plugins remain stable, maintainable, and easy to trust across organisations."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","href":"/docs/","label":"Introduction","docId":"docs/introduction","unlisted":false},{"type":"category","label":"Getting Started","collapsed":false,"items":[{"type":"link","href":"/docs/getting-started/introduction","label":"Introduction","docId":"docs/getting-started/introduction","unlisted":false},{"type":"link","href":"/docs/getting-started/mobile","label":"Plugin Visibility in Mobile App","docId":"docs/getting-started/plugin-visibility","unlisted":false},{"type":"link","href":"/docs/getting-started/managing","label":"Managing Plugins","docId":"docs/getting-started/managing","unlisted":false}],"collapsible":true},{"type":"category","label":"Developer Resources","items":[{"type":"link","href":"/docs/developer-resources/introduction","label":"Introduction","docId":"docs/developer-resources/introduction","unlisted":false},{"type":"link","href":"/docs/developer-resources/container-plugins","label":"Containerizing Plugins","docId":"docs/developer-resources/container-plugins","unlisted":false},{"type":"link","href":"/docs/developer-resources/testing","label":"Testing","docId":"docs/developer-resources/testing","unlisted":false},{"type":"link","href":"/docs/developer-resources/scripts","label":"Plugin Scripts","docId":"docs/developer-resources/scripts","unlisted":false},{"type":"link","href":"/docs/developer-resources/architecture","label":"Plugin System Architecture","docId":"docs/developer-resources/architecture","unlisted":false},{"type":"link","href":"/docs/developer-resources/extension-points","label":"Extension Points Reference","docId":"docs/developer-resources/extension-points","unlisted":false},{"type":"link","href":"/docs/developer-resources/plugin-development","label":"Plugin Development Guide","docId":"docs/developer-resources/plugin-development","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"docs/developer-resources/architecture":{"id":"docs/developer-resources/architecture","title":"Plugin System Architecture","description":"This document describes the architecture of the Talawa plugin system, including how plugins are loaded, managed, and integrated into the platform.","sidebar":"tutorialSidebar"},"docs/developer-resources/container-plugins":{"id":"docs/developer-resources/container-plugins","title":"Containerizing Plugins","description":"Some plugins may require significant resources (e.g. ML models, media processing, or long-running tasks). These can be containerized using Docker to isolate them from the main Talawa services and maintain performance and stability.","sidebar":"tutorialSidebar"},"docs/developer-resources/extension-points":{"id":"docs/developer-resources/extension-points","title":"Extension Points Reference","description":"This document provides a comprehensive reference for all extension points available in the Talawa plugin system.","sidebar":"tutorialSidebar"},"docs/developer-resources/introduction":{"id":"docs/developer-resources/introduction","title":"Introduction","description":"Welcome to Talawa-Plugins","sidebar":"tutorialSidebar"},"docs/developer-resources/plugin-development":{"id":"docs/developer-resources/plugin-development","title":"Plugin Development Guide","description":"This guide walks you through creating a complete plugin for the Talawa platform, using the Plugin Map plugin as a reference example.","sidebar":"tutorialSidebar"},"docs/developer-resources/scripts":{"id":"docs/developer-resources/scripts","title":"Plugin Scripts","description":"Scripts for plugin development and distribution.","sidebar":"tutorialSidebar"},"docs/developer-resources/testing":{"id":"docs/developer-resources/testing","title":"Testing","description":"To ensure quality and stability, all plugins must include appropriate unit and integration tests. Testing helps verify that plugin logic works correctly across the server, admin, and mobile components.","sidebar":"tutorialSidebar"},"docs/getting-started/introduction":{"id":"docs/getting-started/introduction","title":"Introduction","description":"Talawa Plugins allow you to add optional features to your organisation\u2019s Talawa system. You can enable or disable features based on what your organisation needs.","sidebar":"tutorialSidebar"},"docs/getting-started/managing":{"id":"docs/getting-started/managing","title":"Managing Plugins","description":"This guide covers how to manage plugins in the Talawa Admin Panel, including installation, activation, and monitoring.","sidebar":"tutorialSidebar"},"docs/getting-started/plugin-visibility":{"id":"docs/getting-started/plugin-visibility","title":"Plugin Visibility in Mobile App","description":"Some plugins extend their functionality to the Talawa Mobile App. When such a plugin is installed and enabled in the Admin Panel, it may unlock new screens, actions, or menu items for the users in that organisation.","sidebar":"tutorialSidebar"},"docs/introduction":{"id":"docs/introduction","title":"Introduction","description":"Talawa Plugins allow organizations to extend the functionality of the Talawa platform by installing additional features when needed.","sidebar":"tutorialSidebar"}}}}')}}]);